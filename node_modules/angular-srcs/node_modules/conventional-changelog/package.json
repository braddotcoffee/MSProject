{
  "_args": [
    [
      {
        "raw": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
        "scope": null,
        "escapedName": "conventional-changelog",
        "name": "conventional-changelog",
        "rawSpec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
        "spec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
        "type": "remote"
      },
      "/home/bwbonanno/Documents/Websites/Confessions/SourceCode/node_modules/angular-srcs"
    ]
  ],
  "_from": "conventional-changelog@latest",
  "_id": "conventional-changelog@1.1.0",
  "_inCache": true,
  "_location": "/angular-srcs/conventional-changelog",
  "_phantomChildren": {},
  "_requested": {
    "raw": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
    "scope": null,
    "escapedName": "conventional-changelog",
    "name": "conventional-changelog",
    "rawSpec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
    "spec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/angular-srcs/gulp-conventional-changelog"
  ],
  "_resolved": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
  "_shasum": "8ae3fb59feb74bbee0a25833ee1f83dad4a07874",
  "_shrinkwrap": null,
  "_spec": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-1.1.0.tgz",
  "_where": "/home/bwbonanno/Documents/Websites/Confessions/SourceCode/node_modules/angular-srcs",
  "bugs": {
    "url": "https://github.com/ajoslin/conventional-changelog/issues"
  },
  "contributors": [
    {
      "name": "Brian Ford"
    },
    {
      "name": "Vojta JÃ­na"
    },
    {
      "name": "Andrew Joslin"
    }
  ],
  "dependencies": {
    "conventional-changelog-angular": "^1.0.0",
    "conventional-changelog-atom": "^0.1.0",
    "conventional-changelog-codemirror": "^0.1.0",
    "conventional-changelog-core": "^1.3.0",
    "conventional-changelog-ember": "^0.2.0",
    "conventional-changelog-eslint": "^0.1.0",
    "conventional-changelog-express": "^0.1.0",
    "conventional-changelog-jquery": "^0.1.0",
    "conventional-changelog-jscs": "^0.1.0",
    "conventional-changelog-jshint": "^0.1.0"
  },
  "description": "Generate a changelog from git metadata",
  "devDependencies": {
    "chai": "^3.0.0",
    "concat-stream": "^1.4.10",
    "coveralls": "^2.11.2",
    "istanbul": "^0.4.0",
    "jscs": "^2.0.0",
    "jshint": "^2.8.0",
    "mocha": "*",
    "shelljs": "^0.6.0",
    "through2": "^2.0.0"
  },
  "homepage": "https://github.com/ajoslin/conventional-changelog#readme",
  "keywords": [
    "conventional-changelog",
    "conventional",
    "changelog",
    "log"
  ],
  "license": "MIT",
  "name": "conventional-changelog",
  "optionalDependencies": {},
  "readme": "#  [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage Status][coveralls-image]][coveralls-url]\n\n> Generate a changelog from git metadata\n\nYou are probably looking for the [cli](https://github.com/stevemao/conventional-changelog-cli) module. Or use one of the plugins if you are already using the tool:  [grunt](https://github.com/btford/grunt-conventional-changelog)/[gulp](https://github.com/stevemao/gulp-conventional-changelog)/[atom](https://github.com/stevemao/atom-conventional-changelog).\n\n\n## Usage\n\n```sh\n$ npm install --save conventional-changelog\n```\n\n```js\nvar conventionalChangelog = require('conventional-changelog');\n\nconventionalChangelog({\n  preset: 'angular'\n})\n  .pipe(process.stdout); // or any writable stream\n```\n\n\n## API\n\n### conventionalChangelog([options, [context, [gitRawCommitsOpts, [parserOpts, [writerOpts]]]]])\n\nReturns a readable stream.\n\n#### options\n\nSee the [conventional-changelog-core](https://github.com/stevemao/conventional-changelog-core) docs. The API is the same with the following changes or additions:\n\n##### preset\n\nType: `string` Possible values: `'angular', 'atom', 'codemirror', 'ember', 'eslint', 'express', 'jquery', 'jscs', 'jshint'`\n\nIt's recommended to use a preset so you don't have to define everything yourself. `options.config` will be set to this value.\n\n\n## [Notes for parent modules](https://github.com/stevemao/conventional-changelog-core#notes-for-parent-modules)\n\n\n## Related\n\n- [conventional-github-releaser](https://github.com/stevemao/conventional-github-releaser) - Make a new GitHub release from git metadata\n- [conventional-recommended-bump](https://github.com/stevemao/conventional-recommended-bump) - Get a recommended version bump based on conventional commits\n- [conventional-commits-detector](https://github.com/stevemao/conventional-commits-detector) - Detect what commit message convention your repository is using\n- [commitizen](https://github.com/commitizen/cz-cli) - Simple commit conventions for internet citizens.\n- [angular-precommit](https://github.com/ajoslin/angular-precommit) - Pre commit with angular conventions\n\n\n## License\n\nMIT\n\n\n[npm-image]: https://badge.fury.io/js/conventional-changelog.svg\n[npm-url]: https://npmjs.org/package/conventional-changelog\n[travis-image]: https://travis-ci.org/ajoslin/conventional-changelog.svg?branch=master\n[travis-url]: https://travis-ci.org/ajoslin/conventional-changelog\n[daviddm-image]: https://david-dm.org/ajoslin/conventional-changelog.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/ajoslin/conventional-changelog\n[coveralls-image]: https://coveralls.io/repos/ajoslin/conventional-changelog/badge.svg\n[coveralls-url]: https://coveralls.io/r/ajoslin/conventional-changelog\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ajoslin/conventional-changelog.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- -R spec --timeout 30000 && rm -rf ./coverage",
    "lint": "jshint test *.js --exclude node_modules && jscs test *.js",
    "test": "npm run-script lint && mocha --timeout 30000"
  },
  "version": "1.1.0"
}
