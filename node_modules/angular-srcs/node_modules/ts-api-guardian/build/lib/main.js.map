{"version":3,"sources":["main.ts"],"names":["generateGoldenFile","verifyAgainstGoldenFile","ensureDirectory"],"mappings":"AAAA,qBAA0B,MAAM,CAAC,CAAA;AACjC,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,2BAA8C,cAAc,CAAC,CAAA;AAE7D,2BAA8C,cAAc,CAAC;AAA/B,2CAA+B;AAE7D,4BACI,UAAkB,EAAE,OAAe,EAAE,OAAkC;IAAlCA,uBAAkCA,GAAlCA,YAAkCA;IACzEA,IAAMA,MAAMA,GAAGA,sBAASA,CAACA,UAAUA,EAAEA,OAAOA,CAACA,CAACA;IAC9CA,eAAeA,CAACA,IAAIA,CAACA,OAAOA,CAACA,OAAOA,CAACA,CAACA,CAACA;IACvCA,EAAEA,CAACA,aAAaA,CAACA,OAAOA,EAAEA,MAAMA,CAACA,CAACA;AACpCA,CAACA;AALe,0BAAkB,qBAKjC,CAAA;AAED,iCACI,UAAkB,EAAE,UAAkB,EAAE,OAAkC;IAAlCC,uBAAkCA,GAAlCA,YAAkCA;IAC5EA,IAAMA,MAAMA,GAAGA,sBAASA,CAACA,UAAUA,EAAEA,OAAOA,CAACA,CAACA;IAC9CA,IAAMA,QAAQA,GAAGA,EAAEA,CAACA,YAAYA,CAACA,UAAUA,CAACA,CAACA,QAAQA,EAAEA,CAACA;IAExDA,EAAEA,CAACA,CAACA,MAAMA,KAAKA,QAAQA,CAACA,CAACA,CAACA;QACxBA,MAAMA,CAACA,EAAEA,CAACA;IACZA,CAACA;IAACA,IAAIA,CAACA,CAACA;QACNA,IAAMA,KAAKA,GAAGA,kBAAWA,CAACA,UAAUA,EAAEA,QAAQA,EAAEA,MAAMA,EAAEA,aAAaA,EAAEA,eAAeA,CAACA,CAACA;QAExFA,iCAAiCA;QACjCA,IAAMA,KAAKA,GAAGA,KAAKA,CAACA,OAAOA,CAACA,IAAIA,EAAEA,KAAKA,CAACA,OAAOA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA;QAE/DA,MAAMA,CAACA,KAAKA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA;IAChCA,CAACA;AACHA,CAACA;AAfe,+BAAuB,0BAetC,CAAA;AAED,yBAAyB,GAAW;IAClCC,EAAEA,CAACA,CAACA,CAACA,EAAEA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;QACxBA,eAAeA,CAACA,IAAIA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,CAACA;QACnCA,EAAEA,CAACA,SAASA,CAACA,GAAGA,CAACA,CAACA;IACpBA,CAACA;AACHA,CAACA","file":"main.js","sourcesContent":["import {createPatch} from 'diff';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport {SerializationOptions, publicApi} from './serializer';\n\nexport {SerializationOptions, publicApi} from './serializer';\n\nexport function generateGoldenFile(\n    entrypoint: string, outFile: string, options: SerializationOptions = {}): void {\n  const output = publicApi(entrypoint, options);\n  ensureDirectory(path.dirname(outFile));\n  fs.writeFileSync(outFile, output);\n}\n\nexport function verifyAgainstGoldenFile(\n    entrypoint: string, goldenFile: string, options: SerializationOptions = {}): string {\n  const actual = publicApi(entrypoint, options);\n  const expected = fs.readFileSync(goldenFile).toString();\n\n  if (actual === expected) {\n    return '';\n  } else {\n    const patch = createPatch(goldenFile, expected, actual, 'Golden file', 'Generated API');\n\n    // Remove the header of the patch\n    const start = patch.indexOf('\\n', patch.indexOf('\\n') + 1) + 1;\n\n    return patch.substring(start);\n  }\n}\n\nfunction ensureDirectory(dir: string) {\n  if (!fs.existsSync(dir)) {\n    ensureDirectory(path.dirname(dir));\n    fs.mkdirSync(dir);\n  }\n}\n"],"sourceRoot":"/source/"}