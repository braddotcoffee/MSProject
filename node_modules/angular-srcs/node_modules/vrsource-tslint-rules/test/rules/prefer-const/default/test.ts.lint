/**
Lint test where we should use const if possible
*/
function doSomething() {
    let not_changed = 10;
        ~~~~~~~~~~~~~~~~   [Identifier 'not_changed' never appears on the LHS of an assignment - use const instead of let for its declaration.]
    const good      = 30;

    let var1 = 10;
    let var2 = 20;
    let var3 = 30;

    var1 = var1 * 10;

    var2++;

    var3 = getValue();


    let obj0: Object = {val1: 10, nested: {val2: 10}};
    let obj1 = {val1: 10, nested: {val2: 10}};
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  [Identifier 'obj1' never appears on the LHS of an assignment - use const instead of let for its declaration.]
    let obj2 = {val1: 10, nested: {val2: 10}};
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  [Identifier 'obj2' never appears on the LHS of an assignment - use const instead of let for its declaration.]

    obj0 = {};
    obj1.val1 = 10;
    obj2.nested.val2 = 10;

    let d1 = 10;
    let d2 = 20;

    [d1, d2] = [50, 60];

}

function getValue(): number { return 10; }
