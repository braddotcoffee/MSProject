{
  "_args": [
    [
      {
        "raw": "karma-browserstack-launcher@https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
        "scope": null,
        "escapedName": "karma-browserstack-launcher",
        "name": "karma-browserstack-launcher",
        "rawSpec": "https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
        "spec": "https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
        "type": "remote"
      },
      "/home/bwbonanno/Documents/Websites/Confessions/SourceCode/node_modules/angular-srcs"
    ]
  ],
  "_from": "karma-browserstack-launcher@0.1.9",
  "_id": "karma-browserstack-launcher@0.1.9",
  "_inCache": true,
  "_location": "/angular-srcs/karma-browserstack-launcher",
  "_phantomChildren": {},
  "_requested": {
    "raw": "karma-browserstack-launcher@https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
    "scope": null,
    "escapedName": "karma-browserstack-launcher",
    "name": "karma-browserstack-launcher",
    "rawSpec": "https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
    "spec": "https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
  "_shasum": "b75ac716ece616376070d3958552f2db83cf404c",
  "_shrinkwrap": null,
  "_spec": "karma-browserstack-launcher@https://registry.npmjs.org/karma-browserstack-launcher/-/karma-browserstack-launcher-0.1.9.tgz",
  "_where": "/home/bwbonanno/Documents/Websites/Confessions/SourceCode/node_modules/angular-srcs",
  "author": {
    "name": "Vojta Jina",
    "email": "vojta.jina@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/karma-runner/karma-browserstack-launcher/issues"
  },
  "contributors": [
    {
      "name": "dignifiedquire",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Donato Borrello",
      "email": "donato@jwplayer.com"
    },
    {
      "name": "Shirish Kamath",
      "email": "shirishk.87@gmail.com"
    },
    {
      "name": "DonatoB",
      "email": "donato@jwplayer.com"
    },
    {
      "name": "L42y",
      "email": "423300@gmail.com"
    },
    {
      "name": "Michał Gołębiowski",
      "email": "m.goleb@gmail.com"
    },
    {
      "name": "Nicolas Ferrero",
      "email": "ferrero.nicolas@gmail.com"
    },
    {
      "name": "Christian Budde Christensen",
      "email": "budde377@gmail.com"
    },
    {
      "name": "Anthony Trimble",
      "email": "red2678@gmail.com"
    },
    {
      "name": "Mark Trostler",
      "email": "mark@zzo.com"
    },
    {
      "name": "Bobby Earl",
      "email": "bobby.earl@blackbaud.com"
    },
    {
      "name": "Neal Stewart",
      "email": "nes@tradeshift.com"
    },
    {
      "name": "Atsushi Nagase",
      "email": "a@ngs.io"
    },
    {
      "name": "Nidhi Makhijani",
      "email": "nidhimj22@gmail.com"
    },
    {
      "name": "Carl-Erik Kopseng",
      "email": "carlerik@gmail.com"
    },
    {
      "name": "Takashi Aoki",
      "email": "taak77@gmail.com"
    },
    {
      "name": "Dan Brooks",
      "email": "danger.dan_@hotmail.co.uk"
    },
    {
      "name": "Jan Florian Dietrich",
      "email": "jfd@daenen4.de"
    }
  ],
  "dependencies": {
    "browserstack": "1.2.0",
    "browserstacktunnel-wrapper": "~1.4.2",
    "q": "~1.4.1"
  },
  "description": "A Karma plugin. Launch any browser on BrowserStack!",
  "devDependencies": {
    "eslint": "^1.0.0",
    "eslint-config-standard": "^4.0.0",
    "eslint-plugin-standard": "^1.2.0",
    "grunt": "~0.4.5",
    "grunt-auto-release": "~0.0.2",
    "grunt-bump": "~0.5.0",
    "grunt-conventional-changelog": "^4.1.0",
    "grunt-conventional-github-releaser": "^0.4.0",
    "grunt-eslint": "^17.0.0",
    "grunt-npm": "~0.0.2",
    "load-grunt-tasks": "^3.2.0"
  },
  "homepage": "https://github.com/karma-runner/karma-browserstack-launcher#readme",
  "keywords": [
    "karma-plugin",
    "karma-launcher",
    "browserstack",
    "browser-stack"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "karma-browserstack-launcher",
  "optionalDependencies": {},
  "peerDependencies": {
    "karma": ">=0.9"
  },
  "readme": "# karma-browserstack-launcher\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-browserstack-launcher)\n [![npm version](https://img.shields.io/npm/v/karma-browserstack-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-browserstack-launcher) [![npm downloads](https://img.shields.io/npm/dm/karma-browserstack-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-browserstack-launcher)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-browserstack-launcher/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-browserstack-launcher) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-browserstack-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-browserstack-launcher) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-browserstack-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-browserstack-launcher#info=devDependencies)\n\n> Use any browser on [BrowserStack](https://www.browserstack.com/)!\n\n\n## Installation\n\nThe easiest way is to keep `karma-browserstack-launcher` as a devDependency in your `package.json`. Just run,\n\n```bash\n$ npm install karma-browserstack-launcher --save-dev\n```\n\nand it will be added automatically.\n\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    // global config of your BrowserStack account\n    browserStack: {\n      username: 'jamesbond',\n      accessKey: '007'\n    },\n\n    // define browsers\n    customLaunchers: {\n      bs_firefox_mac: {\n        base: 'BrowserStack',\n        browser: 'firefox',\n        browser_version: '21.0',\n        os: 'OS X',\n        os_version: 'Mountain Lion'\n      },\n      bs_iphone5: {\n        base: 'BrowserStack',\n        device: 'iPhone 5',\n        os: 'ios',\n        os_version: '6.0'\n      }\n    },\n\n    browsers: ['bs_firefox_mac', 'bs_iphone5']\n  })\n}\n```\n\n### Global options\n\n- `username` your BS username (email), you can also use `BROWSER_STACK_USERNAME` env variable.\n- `accessKey` your BS access key (password), you can also use `BROWSER_STACK_ACCESS_KEY` env variable.\n- `startTunnel` do you wanna establish the BrowserStack tunnel ? (defaults to `true`)\n- `tunnelIdentifier` in case you want to start the BrowserStack tunnel outside `karma` by setting `startTunnel` to `false`, set the identifier passed to the `-localIdentifier` option here (optional)\n- `retryLimit` how many times do you want to retry to capture the browser ? (defaults to `3`)\n- `captureTimeout` the browser capture timeout (defaults to `120`)\n- `timeout` the BS worker timeout (defaults to `300`\n- `build` the BS worker build name (optional)\n- `name` the BS worker name (optional)\n- `project` the BS worker project name (optional)\n- `binaryBasePath` the BS binary base bath, you can also use `BROWSER_STACK_BINARY_BASE_PATH` env variable. This will override the default and set the base path to the BS local binary (optional)\n- `proxyHost` the host of your proxy as you would define it for BrowserstackLocal\n- `proxyPort` the port of your proxy as you would define it for BrowserstackLocal\n- `proxyUser` the username used for authentication with you proxy as you would define it for BrowserstackLocal\n- `proxyPass` the password used for authenticationwit your proxy as you would define it for BrowserstackLocal\n\n### Per browser options\n\n- `device` name of the device\n- `real_mobile ` allow browserstack to use a simulator\n- `browser` name of the browser\n- `browser_version` version of the browser\n- `os` which platform ?\n- `os_version` version of the platform\n\n### Browserstack iOS simulators\n\nBy default, your Selenium and JS tests will run on real iOS devices on BrowserStack. Since we are in the implementation phase, we are still working on a few things, such as adding more devices, ability to test on local URLs, etc.\n\nIn case your tests are facing any issues on real iOS devices, we also provide iOS simulators where you can run your automated tests smoothly.\n\nTo access our iOS simulators, use the following capabilities:\n\n```js\ncustomLaunchers: {\n  iPad_3: {\n    real_mobile: false,\n    device: 'iPad 3rd (6.0)',\n    os: 'ios',\n    'os_version': '6.0',\n    'browser_version': null,\n    browser: 'Mobile Safari'\n  }\n}\n```\n\nList of iOS simulators you can test on:\n\n- `device: 'iPad 3rd', 'os_version': '5.1'`\n- `device: 'iPad 3rd (6.0)', 'os_version': '6.0'`\n- `device: 'iPad Mini', 'os_version': '7.0'`\n- `device: 'iPad 4th', 'os_version': '7.0'`\n- `device: 'iPhone 4S', 'os_version': '5.1'`\n- `device: 'iPhone 4S (6.0)', 'os_version': '6.0'`\n- `device: 'iPhone 5', 'os_version': '6.0'`\n- `device: 'iPhone 5S', 'os_version': '7.0'`\n\n---\n\n[BrowserStack's REST API documentation](https://www.browserstack.com/automate/rest-api#rest-api-browsers)\nexplains how to retrieve a list of desired capabilities for browsers.\n\n----\n\nFor more information on Karma see the [homepage](http://karma-runner.github.io).\n\n----\n\nCheck out sample code working with karma-browserstack-launcher [here](https://github.com/browserstack/karma-browserstack-example).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/karma-runner/karma-browserstack-launcher.git"
  },
  "version": "0.1.9"
}
